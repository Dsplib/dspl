
clear all; close all; clc;

if(exist('OCTAVE_VERSION', 'builtin') ~= 0)
  pkg load signal;
end

% порядок исходного фильтра 
ord = 96;

% генерю фильтр (можно задать совершенно произвольно)
% ВАЖНО!!! Первый коэффициент фильтра не должен быть равным 0!!!
% h задает передаточную характеристику H(z), которая является полномом
h = fir1(ord, 0.3);

% количество коэффициентов фильтра
l = length(h);

% первый коэффициент является нормировочным ОН НЕ ДОЛЖЕН БЫТЬ НУЛЕВЫМ
norm = h(1);

%Формирую companion matrix для расчета нулей полниома H(z)
A = diag (ones (1, l-2), -1);
A(1,:) = -h(2:l);

%Нули полинома есть собсвенные числа companion matrix (GOOGLE об этом знает все)
r = eig(A);

% h0 первый укороченный фильтр
h0 = 1;
for(k = 1:length(r)/2);
  h0 = conv(h0, [1, -r(k)]);
end

% h1 первый укороченный фильтр
h1 = 1;
for(k = length(r)/2+1:length(r));
  h1 = conv(h1, [1, -r(k)]);
end

% На графике видно что свертка коротких фильтров дает точно исходный h
% Это значит включенные каскадно они будут работать как исхоный фильтр
% Конечно не забываем вернуть нормировку
figure; plot(0:ord, h, 0:ord, real(conv(h0, h1))) 


