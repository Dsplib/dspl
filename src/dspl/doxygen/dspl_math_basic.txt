
#ifdef DOXYGEN_EN

/*!
	\ingroup SPEC_MATH_TRIG_GROUP
	\fn int dspl_cos_cmplx(double *xR, double *xI, int n, double *yR, double *yI)
	\brief Cosine of complex arguments
	
	Function calculates cosine function of a complex vector argument. 
	
	\param[in]	xR	Pointer to the complex vector real part.
					Vector size is `[n x 1]`.
	
	
	\param[in]	xI	Pointer to the complex vector image part.
					Vector size is `[n x 1]`.
					This pointer can be a `NULL` if function uses real argument only.
					
	\param[in]	n	Input vector size.
	
	\param[out]	yR	Pointer to the cosine real part values.
					Vector size is `[n x 1]`.
					Memory must be allocated.
	
	\param[out]	yI	Pointer to the cosine image part values.
					Vector size is `[n x 1]`.
					Memory must be allocated (even if `xI` is `NULL`).
		
	\return	
		DSPL_OK if complex cosine has been calculated successfully, else error code.<BR>

		
	\author
		Sergey Bakhurin.                                                         
		www.dsplib.org 
*/



/*!
	\ingroup SPEC_MATH_COMMON_GROUP
	\fn int dspl_log_cmplx(double *xR, double *xI, int n, double *yR, double *yI)
	\brief Logarithm of complex arguments
	
	Function calculates logarithm function of a complex vector argument. 
	
	\param[in]	xR	Pointer to the complex vector real part.
					Vector size is `[n x 1]`.
	
	
	\param[in]	xI	Pointer to the complex vector image part.
					Vector size is `[n x 1]`.
					This pointer can be a `NULL` if function uses real argument only.
					
	\param[in]	n	Input vector size.
	
	\param[out]	yR	Pointer to the logarithm real part values.
					Vector size is `[n x 1]`.
					Memory must be allocated.
	
	\param[out]	yI	Pointer to the logarithm image part values.
					Vector size is `[n x 1]`.
					Memory must be allocated (even if `xI` is `NULL`).
		
	\return	
		DSPL_OK if complex logarithm has been calculated successfully, else error code.<BR>

		
	\author
		Sergey Bakhurin.                                                         
		www.dsplib.org 
*/



/*!
	\ingroup SPEC_MATH_TRIG_GROUP
	\fn int dspl_sin_cmplx(double *xR, double *xI, int n, double *yR, double *yI)
	\brief Sine of complex arguments
	
	Function calculates sine function of a complex vector argument. 
	
	\param[in]	xR	Pointer to the complex vector real part.
					Vector size is `[n x 1]`.
	
	
	\param[in]	xI	Pointer to the complex vector image part.
					Vector size is `[n x 1]`.
					This pointer can be a `NULL` if function uses real argument only.
					
	\param[in]	n	Input vector size.
	
	\param[out]	yR	Pointer to the sine real part values.
					Vector size is `[n x 1]`.
					Memory must be allocated.
	
	\param[out]	yI	Pointer to the sine image part values.
					Vector size is `[n x 1]`.
					Memory must be allocated (even if `xI` is `NULL`).
		
	\return	
		DSPL_OK if complex sine has been calculated successfully, else error code.<BR>

		
	\author
		Sergey Bakhurin.                                                         
		www.dsplib.org 
*/



/*!
	\ingroup SPEC_MATH_COMMON_GROUP
	\fn int dspl_sqrt_cmplx(double *xR, double *xI, int n, double *yR, double *yI)
	\brief Square root of complex arguments
	
	Function calculates square root function of a complex vector argument. 
	
	\param[in]	xR	Pointer to the complex vector real part.
					Vector size is `[n x 1]`.
	
	
	\param[in]	xI	Pointer to the complex vector image part.
					Vector size is `[n x 1]`.
					This pointer can be a `NULL` if function uses real argument only.
					
	\param[in]	n	Input vector size.
	
	\param[out]	yR	Pointer to the square root real part values.
					Vector size is `[n x 1]`.
					Memory must be allocated.
	
	\param[out]	yI	Pointer to the square root image part values.
					Vector size is `[n x 1]`.
					Memory must be allocated (even if `xI` is `NULL`).
		
	\return	
		DSPL_OK if complex square root has been calculated successfully, else error code.<BR>

		
	\author
		Sergey Bakhurin.                                                         
		www.dsplib.org 
*/





#elseif DOXYGEN_RU


/*!
	\ingroup SPEC_MATH_TRIG_GROUP
	\fn int dspl_cos_cmplx(double *xR, double *xI, int n, double *yR, double *yI)
	\brief Косинус комплексного векторного аргумента
	
	Функция рассчитывает значения косинуса для комплексного векторного аргумента.
	
	\param[in]	xR	Указатель на вектор реальной части комплексного аргумента.
					Размер вектора `[n x 1]`.
	
	
	\param[in]	xI	Указатель на вектор мнимой части комплексного аргумента.
					Размер вектора `[n x 1]`.
					Данный указатель может быть `NULL` если необходимо рассчитать значения
					косинуса для вещественного векторного аргумента.
					
	\param[in]	n	Размер входного и выходного векторов.
	
	\param[out]	yR	Указатель на вектор вещественной части значений косинуса.
					Размер вектора `[n x 1]`.
					Память должна быть выделена.
	
	\param[out]	yI	Указатель на вектор вещественной части значений косинуса.
					Размер вектора `[n x 1]`.
					Память должна быть выделена. Данный указатель не может быть `NULL` даже если
					функция используется для вещественного входного аргумента.
		
	\return	
		DSPL_OK если функция расчитана успешно. В противном случае код ошибки.<BR>

		
	\author
		Бахурин Сергей.                                                         
		www.dsplib.org 
*/




/*!
	\ingroup SPEC_MATH_COMMON_GROUP
	\fn int dspl_log_cmplx(double *xR, double *xI, int n, double *yR, double *yI)
	\brief Натуральный логарифм комплексного векторного аргумента
	
	Функция рассчитывает значения натурального логарифма для комплексного векторного аргумента.
	
	\param[in]	xR	Указатель на вектор реальной части комплексного аргумента.
					Размер вектора `[n x 1]`.
	
	
	\param[in]	xI	Указатель на вектор мнимой части комплексного аргумента.
					Размер вектора `[n x 1]`.
					Данный указатель может быть `NULL` если необходимо рассчитать значения
					натурального логарифма для вещественного векторного аргумента.
					
	\param[in]	n	Размер входного и выходного векторов.
	
	\param[out]	yR	Указатель на вектор вещественной части значений натурального логарифма.
					Размер вектора `[n x 1]`.
					Память должна быть выделена.
	
	\param[out]	yI	Указатель на вектор вещественной части значений натурального логарифма.
					Размер вектора `[n x 1]`.
					Память должна быть выделена. Данный указатель не может быть `NULL` даже если
					функция используется для вещественного входного аргумента.
		
	\return	
		DSPL_OK если функция расчитана успешно. В противном случае код ошибки.<BR>

		
	\author
		Бахурин Сергей.                                                         
		www.dsplib.org 
*/






/*!
	\ingroup SPEC_MATH_TRIG_GROUP
	\fn int dspl_sin_cmplx(double *xR, double *xI, int n, double *yR, double *yI)
	\brief Cинус комплексного векторного аргумента
	
	Функция рассчитывает значения синуса для комплексного векторного аргумента.
	
	\param[in]	xR	Указатель на вектор реальной части комплексного аргумента.
					Размер вектора `[n x 1]`.
	
	
	\param[in]	xI	Указатель на вектор мнимой части комплексного аргумента.
					Размер вектора `[n x 1]`.
					Данный указатель может быть `NULL` если необходимо рассчитать значения
					синуса для вещественного векторного аргумента.
					
	\param[in]	n	Размер входного и выходного векторов.
	
	\param[out]	yR	Указатель на вектор вещественной части значений синуса.
					Размер вектора `[n x 1]`.
					Память должна быть выделена.
	
	\param[out]	yI	Указатель на вектор вещественной части значений синуса.
					Размер вектора `[n x 1]`.
					Память должна быть выделена. Данный указатель не может быть `NULL` даже если
					функция используется для вещественного входного аргумента.
		
	\return	
		DSPL_OK если функция расчитана успешно. В противном случае код ошибки.<BR>

		
	\author
		Бахурин Сергей.                                                         
		www.dsplib.org 
*/




/*!
	\ingroup SPEC_MATH_COMMON_GROUP
	\fn int dspl_sqrt_cmplx(double *xR, double *xI, int n, double *yR, double *yI)
	\brief Корень квадратный комплексного векторного аргумента
	
	Функция рассчитывает значения квадратного корня для комплексного векторного аргумента.
	
	\param[in]	xR	Указатель на вектор реальной части комплексного аргумента.
					Размер вектора `[n x 1]`.
	
	
	\param[in]	xI	Указатель на вектор мнимой части комплексного аргумента.
					Размер вектора `[n x 1]`.
					Данный указатель может быть `NULL` если необходимо рассчитать значения
					квадратного корня для вещественного векторного аргумента.
					
	\param[in]	n	Размер входного и выходного векторов.
	
	\param[out]	yR	Указатель на вектор вещественной части значений квадратного корня.
					Размер вектора `[n x 1]`.
					Память должна быть выделена.
	
	\param[out]	yI	Указатель на вектор вещественной части значений квадратного корня.
					Размер вектора `[n x 1]`.
					Память должна быть выделена. Данный указатель не может быть `NULL` даже если
					функция используется для вещественного входного аргумента.
		
	\return	
		DSPL_OK если функция расчитана успешно. В противном случае код ошибки.<BR>

		
	\author
		Бахурин Сергей.                                                         
		www.dsplib.org 
*/





#endif
